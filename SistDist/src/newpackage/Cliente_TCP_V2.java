/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newpackage;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author JKM
 */
public class Cliente_TCP_V2 extends javax.swing.JFrame {

    /**
     * Creates new form Servidor_TCP_V2
     */
    public Cliente_TCP_V2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nomeDoArquivo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        ipServidor = new javax.swing.JTextField();
        resultadoDaBusca = new javax.swing.JLabel();
        eviarArquivo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Transferência de Arquivos Pela Rede", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel1.setText("Nome do Arquivo (Use a Extensão do Arquivo):");

        nomeDoArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeDoArquivoActionPerformed(evt);
            }
        });

        jLabel3.setText("IP");

        ipServidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipServidorActionPerformed(evt);
            }
        });

        resultadoDaBusca.setText("Resultado de Busca : ");

        eviarArquivo.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        eviarArquivo.setIcon(new javax.swing.ImageIcon("C:\\Users\\thiag\\Downloads\\image856.png")); // NOI18N
        eviarArquivo.setText("Enviar");
        eviarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eviarArquivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomeDoArquivo)
                    .addComponent(ipServidor)
                    .addComponent(eviarArquivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(resultadoDaBusca, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nomeDoArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ipServidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(resultadoDaBusca)
                .addGap(18, 18, 18)
                .addComponent(eviarArquivo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\thiag\\Downloads\\image832.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 777, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eviarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eviarArquivoActionPerformed
        
        try {
            enviarRequisicaoDeArquivo(); //Chama o método de envio de arquivo
        } catch (IOException ex) {
            Logger.getLogger(Cliente_TCP_V2.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_eviarArquivoActionPerformed

    private void ipServidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipServidorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ipServidorActionPerformed

    private void nomeDoArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeDoArquivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeDoArquivoActionPerformed
    
    public void enviarRequisicaoDeArquivo() throws IOException{
        
        /**
         * Após ser recebido o nome do arquivo a ser pesquisado foi feita a 
         * requisição ao servidor
         */
        try {
            String arquivo = nomeDoArquivo.getText();
            Socket socket = new Socket(ipServidor.getText(), 5566);
            PrintWriter bufferDeSaida = new PrintWriter(socket.getOutputStream(), true);
            BufferedReader bufferDeEntrada = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            
            bufferDeSaida.println(arquivo);
            
            int resposta = Integer.parseInt(bufferDeEntrada.readLine());
            
            if(resposta == 1){
                byte[] objectAsByte = new byte[socket.getReceiveBufferSize()];
                BufferedInputStream buffer = new BufferedInputStream(socket.getInputStream());
                buffer.read(objectAsByte);

                /*Criação de um novo objeto para tratamento de Arquivo*/
                TratamentoDeArquivosServidorV2 arquivoRecebido = (TratamentoDeArquivosServidorV2) getObjectFromByte(objectAsByte);

                /**
                 * Criação de uma string que vai guardar as informações e características
                 * do arquivo recebido
                 */

                String dir = "C:\\Users\\thiag\\Downloads\\" + nomeDoArquivo.getText();

                //Impressão na tela do tipo de arquivo apenas para confirmação                
                resultadoDaBusca.setText("Resultado de Busca : Download do Arquivo Realizado Com Sucesso");
                //Replicando novo arquivo no servidor com as informações fornecidas
                FileOutputStream arquivoRecebidoParaPasta = new FileOutputStream(dir);
                arquivoRecebidoParaPasta.write(arquivoRecebido.getConteudo());
                arquivoRecebidoParaPasta.close();
                
                resultadoDaBusca.setText("Resultado de Busca : Download do Arquivo Realizado Com Sucesso");
            } else if (resposta == 0){
                resultadoDaBusca.setText("Resultado de Busca : Arquivo Não Encontrado");
            } else if (resposta != 1 || resposta != 0){                
                resultadoDaBusca.setText("Resultado de Busca : Erro 404");
            }
            
        } catch (IOException | NumberFormatException e) {
        }
    }
    
    private static Object getObjectFromByte(byte[] objectAsByte) {
        Object obj = null;
        ByteArrayInputStream b_A_I_S = null;
        ObjectInputStream ois = null;
        try {
            b_A_I_S = new ByteArrayInputStream(objectAsByte);
            ois = new ObjectInputStream(b_A_I_S);
            obj = ois.readObject();
            
            b_A_I_S.close();
            ois.close();
            
        } catch (IOException | ClassNotFoundException e) {
            
            e.printStackTrace();
            
        }
        
        return obj;
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente_TCP_V2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente_TCP_V2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente_TCP_V2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente_TCP_V2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cliente_TCP_V2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton eviarArquivo;
    private javax.swing.JTextField ipServidor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nomeDoArquivo;
    private javax.swing.JLabel resultadoDaBusca;
    // End of variables declaration//GEN-END:variables
}
